<Window x:Class="RomanticLabel.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RomanticLabel.ViewModel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        x:Name="MediaService"
        mc:Ignorable="d" Height="450" Width="800" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" WindowStyle="None">
    <Window.InputBindings>
        <KeyBinding Key="O" Command="{Binding FindPath}"/>
        <KeyBinding Key="W" Command="{Binding NextFrameCommand}"/>
        <KeyBinding Key="Q" Command="{Binding PrevFrameCommand}"/>
        <KeyBinding Key="Esc" Command="{Binding CloseWindow}"/>
    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=MediaService}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridBackground">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridBackground">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonClose">
            <BeginStoryboard x:Name="CloseMenu_BeginStoryboard" Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpen">
            <BeginStoryboard Storyboard="{StaticResource OpenMenu}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid x:Name="grid">
        <Grid.Resources>
            <local:DataContextProxy DataContext="{Binding}" x:Key="Proxy" />
        </Grid.Resources>
        <Grid x:Name="GridBackground" Background="#55313131" Opacity="0"/>
        <Canvas Width="800" Height="450">
            
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding DrawGhostRect}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding DrawGhostRect}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            
            <Line Y1="{Binding PanelY}" X2="800" Y2="{Binding PanelY}" Stroke="Yellow" StrokeThickness="{Binding CrossHairThickness}"/>
            <Line X1="{Binding PanelX}" Y1="0" X2="{Binding PanelX}" Y2="450" Stroke="Yellow" StrokeThickness="{Binding CrossHairThickness}"/>
            
            <ItemsControl ItemsSource="{Binding BoundingBoxes}">
                <ItemsControl.Resources>
                    <Style TargetType="local:ResizeThumb">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border BorderBrush="{Binding DataContext.Color}" BorderThickness="2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border>
                            <Grid Tag="{Binding}">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding DataContext.DeleteBoundingBoxCommand, Source={StaticResource Proxy}}" 
                                                          CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                            <MenuItem.Header>
                                                <TextBlock Text="Delete" />
                                            </MenuItem.Header>
                                        </MenuItem>
                                        <MenuItem Command="{Binding DataContext.InterpolationCommand, Source={StaticResource Proxy}}" 
                                                          CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                            <MenuItem.Header>
                                                <TextBlock Text="{Binding DataContext.Interpolation, Source={StaticResource Proxy}}"/>
                                            </MenuItem.Header>
                                        </MenuItem>
                                        <MenuItem>
                                            <MenuItem.Header >
                                                <TextBox Text="{Binding ID, Mode=TwoWay}"/>
                                            </MenuItem.Header>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <local:BoundingThumb IsHitTestVisible="True" Background="Transparent" Cursor="Hand" 
                                                      DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}">
                                    <local:BoundingThumb.Template>
                                        <ControlTemplate>
                                            <Border>
                                                <TextBlock Text="{Binding DataContext.ID}" FontSize="18"/>
                                            </Border>
                                        </ControlTemplate>
                                    </local:BoundingThumb.Template>
                                </local:BoundingThumb>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Height="3" Cursor="SizeNS" Margin="0 -4 0 0" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Width="3" Cursor="SizeWE" Margin="-4 0 0 0" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Width="3" Cursor="SizeWE" Margin="0 0 -4 0" VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Height="3" Cursor="SizeNS" Margin="0 0 0 -4" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch"/>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Width="7" Height="7" Cursor="SizeNWSE" Margin="-6 -6 0 0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Width="7" Height="7" Cursor="SizeNESW" Margin="0 -6 -6 0" VerticalAlignment="Top" HorizontalAlignment="Right"/>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Width="7" Height="7" Cursor="SizeNESW" Margin="-6 0 0 -6" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                                <local:ResizeThumb DataContext="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Width="7" Height="7" Cursor="SizeNWSE" Margin="0 0 -6 -6" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                        <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                        <Setter Property="Height" Value="{Binding Height, Mode=TwoWay}" />
                        <Setter Property="Width" Value="{Binding Width, Mode=TwoWay}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
            <MediaElement x:Name="MediaPlayer" Panel.ZIndex="-1" Source="{Binding VideoPath}" LoadedBehavior="Manual" Height="450" Width="800" IsMuted="True" ScrubbingEnabled="True"/>
            <Rectangle IsHitTestVisible="False" Fill="Yellow" Opacity="0.5" Canvas.Left="{Binding GhostRect.X}" Canvas.Top="{Binding GhostRect.Y}" Width="{Binding GhostRect.Width}" Height="{Binding GhostRect.Height}">
                <Rectangle.Style>
                    <Style TargetType="Rectangle">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLeftMouseDown}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>

            
            <i:Interaction.Behaviors>
                <local:MouseBehaviors MouseX="{Binding PanelX, Mode=OneWayToSource}"
                                  MouseY="{Binding PanelY, Mode=OneWayToSource}"/>
            </i:Interaction.Behaviors>
        </Canvas>

        <Button x:Name="ButtonOpen" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="30" Padding="0">
            <materialDesign:PackIcon Kind="Menu" Foreground="#FF313131"/>
        </Button>
        <Grid x:Name="GridMenu" Width="200" HorizontalAlignment="Left" Margin="-200 0 0 0" Background="White" RenderTransformOrigin="0.5,0.5">
            <Grid.RowDefinitions>
                <RowDefinition Height="193*"/>
                <RowDefinition Height="391*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <StackPanel Grid.RowSpan="2">
                <Grid Height="140">
                    <ContentControl Content="{Binding GaugeView}"/>
                </Grid>
                <materialDesign:DialogHost BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <materialDesign:DialogHost.DialogContent>
                        <Grid Width="300" Height="150" HorizontalAlignment="Center">
                            <StackPanel Orientation="Horizontal" Margin="15">
                                <materialDesign:PackIcon Kind="Folder" Foreground="{StaticResource PrimaryHueMidBrush}" Width="50" Height="50"/>
                                <TextBlock Foreground="Gray" Width="200" Margin="15 5" TextWrapping="Wrap">
                            Allow Application to access photos, media and files on your computer?
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="15">
                                <Button Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Style="{DynamicResource MaterialDesignFlatButton}" Margin="4" VerticalAlignment="Center">
                                    Deny
                                </Button>
                                <Button Command="{Binding FindPath}" Style="{DynamicResource MaterialDesignFlatButton}" Margin="4" VerticalAlignment="Center" Content="Allow">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </materialDesign:DialogHost.DialogContent>
                    <Grid>
                        <StackPanel>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}">
                                <StackPanel Orientation="Horizontal" Height="28">
                                    <materialDesign:PackIcon Kind="Video" Width="20" Height="20" VerticalAlignment="Center"/>
                                    <TextBlock Text="Open Video" Margin="20 0" FontSize="15" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding CancelInterpolation}">
                                <StackPanel Orientation="Horizontal" Height="28">
                                    <materialDesign:PackIcon Kind="BoxVariantClosed" Width="20" Height="20" VerticalAlignment="Center"/>
                                    <TextBlock Text="Interpolation Cancel" Margin="10 0" FontSize="15" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding ObjectDetect}">
                                <StackPanel Orientation="Horizontal" Height="28">
                                    <materialDesign:PackIcon Kind="BoxSearchOutline" Width="20" Height="20" VerticalAlignment="Center"/>
                                    <TextBlock Text="Object Detecting" Margin="15 0" FontSize="15" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Command="">
                                <StackPanel Orientation="Horizontal" Height="28">
                                    <materialDesign:PackIcon Kind="Settings" Width="20" Height="20" VerticalAlignment="Center"/>
                                    <TextBlock Text="Setting" Margin="20 0" FontSize="15" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Command="">
                                <StackPanel Orientation="Horizontal" Height="28">
                                    <materialDesign:PackIcon Kind="Help" Width="20" Height="20" VerticalAlignment="Center"/>
                                    <TextBlock Text="ShortCut" Margin="20 0" FontSize="15" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding SaveBBox}">
                                <StackPanel Orientation="Horizontal" Height="28">
                                    <materialDesign:PackIcon Kind="Folder" Width="20" Height="20" VerticalAlignment="Center"/>
                                    <TextBlock Text="Save BBox" Margin="20 0" FontSize="15" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding CloseWindow}">
                                <StackPanel Orientation="Horizontal" Height="28">
                                    <materialDesign:PackIcon Kind="Close" Width="20" Height="20" VerticalAlignment="Center"/>
                                    <TextBlock Text="Program Exit" Margin="20 0" FontSize="15" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </materialDesign:DialogHost>
            </StackPanel>
            <Button x:Name="ButtonClose" HorizontalAlignment="Right" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Width="30" Height="30" Padding="0">
                <materialDesign:PackIcon Kind="Close"/>
            </Button>
        </Grid>
    </Grid>
</Window>
